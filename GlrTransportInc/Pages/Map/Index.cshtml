@page
@model GlrTransportInc.Pages.Map.IndexModel
@{
}

<!doctype html>
<html lang="en">
<head>
    <meta charset="utf-8">
    <title>Responders</title>
    <base href="/">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="icon" type="image/x-icon" href="favicon.ico">
    <style>
        #map {
            height: 100vh;
            width: 100%;
            right: 7.3%;
        }
        

    </style>
    <style>
        body {
            background-color: #5cb85c;
        }
    </style>

</head>

<body>

    <div class="container">
        <div class="split left">

            <input id="searchInput" class="controls" type="text" placeholder="Enter a location">

            <div id="map"></div>

        </div>
        <script>function initMap() {
                

                var options = {
                    zoom: 15,
                    center: { lat: 33.1501, lng: -97.6873 }
                }

                var map = new google.maps.Map(document.getElementById('map'), options);
                var input = document.getElementById('searchInput');
                map.controls[google.maps.ControlPosition.TOP_LEFT].push(input);

                var autocomplete = new google.maps.places.Autocomplete(input);
                autocomplete.bindTo('bounds', map);

                var infowindow = new google.maps.InfoWindow();
                var marker = new google.maps.Marker({
                    map: map,
                    anchorPoint: new google.maps.Point(0, -29)
                });

                autocomplete.addListener('place_changed', function () {
                    infowindow.close();
                    marker.setVisible(false);
                    var place = autocomplete.getPlace();
                    if (!place.geometry) {
                        window.alert("Autocomplete's returned place contains no geometry");
                        return;
                    }

                    if (place.geometry.viewport) {
                        map.fitBounds(place.geometry.viewport);
                    } else {
                        map.setCenter(place.geometry.location);
                        map.setZoom(17);
                    }
                    marker.setIcon(({
                        url: place.icon,
                        size: new google.maps.Size(71, 71),
                        origin: new google.maps.Point(0, 0),
                        anchor: new google.maps.Point(17, 34),
                        scaledSize: new google.maps.Size(35, 35)
                    }));
                    marker.setPosition(place.geometry.location);
                    marker.setVisible(true);

                    var address = '';
                    if (place.address_components) {
                        address = [
                            (place.address_components[0] && place.address_components[0].short_name || ''),
                            (place.address_components[1] && place.address_components[1].short_name || ''),
                            (place.address_components[2] && place.address_components[2].short_name || '')
                        ].join(' ');
                    }

                    infowindow.setContent('<div><strong>' + place.name + '</strong><br>' + address);
                    infowindow.open(map, marker);


                    for (var i = 0; i < place.address_components.length; i++) {
                        if (place.address_components[i].types[0] == 'postal_code') {
                            document.getElementById('postal_code').innerHTML = place.address_components[i].long_name;
                        }
                        if (place.address_components[i].types[0] == 'country') {
                            document.getElementById('country').innerHTML = place.address_components[i].long_name;
                        }
                    }
                    document.getElementById('location').innerHTML = place.formatted_address;
                    document.getElementById('lat').innerHTML = place.geometry.location.lat();
                    document.getElementById('lon').innerHTML = place.geometry.location.lng();
                });
            }</script>




        <script src="https://maps.googleapis.com/maps/api/js?libraries=places&key=AIzaSyAuFMUETuTk6T4c8FDqosv_oY4925-pw10&callback=initMap"
                async defer></script>

        <ul class="geo-data">
            <li>Full Address: <span id="location"></span></li>
            <li>Postal Code: <span id="postal_code"></span></li>
            <li>Country: <span id="country"></span></li>
            <li>Latitude: <span id="lat"></span></li>
            <li>Longitude: <span id="lon"></span></li>
        </ul>



    </div>






    <app-root></app-root>

</body>
</html>
